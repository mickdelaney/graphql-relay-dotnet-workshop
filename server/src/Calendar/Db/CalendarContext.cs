// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Workshop.Calendar.Api.Configurations;

#nullable disable

namespace Workshop.Calendar.Api
{
    public partial class CalendarContext : DbContext
    {
        public CalendarContext()
        {
        }

        public CalendarContext(DbContextOptions<CalendarContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Attendee> Attendee { get; set; }
        public virtual DbSet<Availability> Availability { get; set; }
        public virtual DbSet<Booking> Booking { get; set; }
        public virtual DbSet<BookingReference> BookingReference { get; set; }
        public virtual DbSet<Credential> Credential { get; set; }
        public virtual DbSet<DailyEventReference> DailyEventReference { get; set; }
        public virtual DbSet<EventType> EventType { get; set; }
        public virtual DbSet<EventTypeCustomInput> EventTypeCustomInput { get; set; }
        public virtual DbSet<Membership> Membership { get; set; }
        public virtual DbSet<Payment> Payment { get; set; }
        public virtual DbSet<ReminderMail> ReminderMail { get; set; }
        public virtual DbSet<ResetPasswordRequest> ResetPasswordRequest { get; set; }
        public virtual DbSet<Schedule> Schedule { get; set; }
        public virtual DbSet<SelectedCalendar> SelectedCalendar { get; set; }
        public virtual DbSet<Team> Team { get; set; }
        public virtual DbSet<UserEventtype> UserEventtype { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<VerificationRequest> VerificationRequest { get; set; }
        public virtual DbSet<Webhook> Webhook { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasPostgresEnum(null, "BookingStatus", new[] { "cancelled", "accepted", "rejected", "pending" })
                .HasPostgresEnum(null, "EventTypeCustomInputType", new[] { "text", "textLong", "number", "bool" })
                .HasPostgresEnum(null, "MembershipRole", new[] { "MEMBER", "OWNER" })
                .HasPostgresEnum(null, "PaymentType", new[] { "STRIPE" })
                .HasPostgresEnum(null, "ReminderType", new[] { "PENDING_BOOKING_CONFIRMATION" })
                .HasPostgresEnum(null, "SchedulingType", new[] { "roundRobin", "collective" })
                .HasPostgresEnum(null, "UserPlan", new[] { "FREE", "TRIAL", "PRO" })
                .HasPostgresEnum(null, "WebhookTriggerEvents", new[] { "BOOKING_CREATED", "BOOKING_RESCHEDULED", "BOOKING_CANCELLED" })
                .HasAnnotation("Relational:Collation", "en_US.utf8");

            modelBuilder.ApplyConfiguration(new Configurations.AttendeeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.AvailabilityConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.BookingConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.BookingReferenceConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.CredentialConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.DailyEventReferenceConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.EventTypeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.EventTypeCustomInputConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.MembershipConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PaymentConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ReminderMailConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ResetPasswordRequestConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ScheduleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.SelectedCalendarConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.UserEventtypeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.UsersConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.VerificationRequestConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.WebhookConfiguration());
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
